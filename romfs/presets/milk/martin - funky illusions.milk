MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=4.000000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=6
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.158
fWaveSmoothing=0.090
fWaveParam=0.380
fModWaveAlphaStart=0.810
fModWaveAlphaEnd=1.400
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=1.000
ob_g=0.600
ob_b=0.000
ob_a=0.000
ib_size=0.110
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=1.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=0.700
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=202
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=1
wavecode_0_scaling=0.14681
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_init1=t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;
wave_0_init2=t2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;
wave_0_init3=t3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;
wave_0_init4=t4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;
wave_0_init5=t5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;
wave_0_init6=t6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;
wave_0_init7=t7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;
wave_0_init8=t8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;
wave_0_init9=
wave_0_per_point1=trel = time/16*0;
wave_0_per_point2=
wave_0_per_point3=x0 = sin(sample*123+trel)+q2;
wave_0_per_point4=y0 = q3 *1+ abs(sin(sample*211+trel))+.2;
wave_0_per_point5=
wave_0_per_point6=x = x0*q30 + y0*q31 + .5;
wave_0_per_point7=y = -x0*q31 + y0*q30 +.5;
wave_0_per_point8=
wave_0_per_point9=a=.6;
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=0.89152
wavecode_1_smoothing=0.82000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.100
wave_1_init1=t
wave_1_per_frame1=trig = q27;
wave_1_per_frame2=
wave_1_per_frame3=ini  = trig*rand(1000) + bnot(trig)*ini;
wave_1_per_frame4=ini2 = trig*rand(1000) + bnot(trig)*ini2;
wave_1_per_frame5=t1 = ini;
wave_1_per_frame6=t2 = ini2;
wave_1_per_frame7=
wave_1_per_frame8=x0 = trig* (rand(100)-50) + bnot(trig)*x0;
wave_1_per_frame9=y0 = trig* (rand(100)-50) + bnot(trig)*y0;
wave_1_per_frame10=
wave_1_per_frame11=t3 = x0;
wave_1_per_frame12=t4 = y0;
wave_1_per_frame13=
wave_1_per_frame14=//t3 = 10; t4 = 10;
wave_1_per_frame15=
wave_1_per_frame16=
wave_1_per_frame17=
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=0.89152
wavecode_2_smoothing=0.82000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=0.100
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=ra = .8;
wave_3_per_point2=rb = .5;
wave_3_per_point3=pib = 6.28318530718;
wave_3_per_point4=
wave_3_per_point5=
wave_3_per_point6=tic = min(time-tin,.1);
wave_3_per_point7=tin = if(equal(sample,0),time,tin);
wave_3_per_point8=
wave_3_per_point9=mod = 1.5 + .5*sin(time*.15);
wave_3_per_point10=med = 1.5 + .5*sin(time*.134);
wave_3_per_point11=med = 5;
wave_3_per_point12=amod = 3;
wave_3_per_point13=
wave_3_per_point14=vr = rand(10001)*.0001;
wave_3_per_point15=rb = rb + rand(10001)*.0001*.1;
wave_3_per_point16=
wave_3_per_point17=a = vr;
wave_3_per_point18=
wave_3_per_point19=sa = vr*pib*.5;
wave_3_per_point20=sp = sa*mod + q1*1.3;
wave_3_per_point21=sam = sa*med - q1*.219;
wave_3_per_point22=
wave_3_per_point23=ox = ra*sin(sam*pib);
wave_3_per_point24=oy = ra*cos(sam*pib);
wave_3_per_point25=ox = ox + rb*-cos(sp)*sin(sam*pib);
wave_3_per_point26=oz = rb*-sin(sp);
wave_3_per_point27=oy = oy + rb*-cos(sp)*cos(sam*pib);
wave_3_per_point28=
wave_3_per_point29=
wave_3_per_point30=xang = time*.132;
wave_3_per_point31=xang = q2;
wave_3_per_point32=yang = time*.153;
wave_3_per_point33=yang = q3;
wave_3_per_point34=zang = time*.110;
wave_3_per_point35=zang = q4;
wave_3_per_point36=fov = 0.6 + 0.2*sin(time);
wave_3_per_point37=fov = .5;
wave_3_per_point38=
wave_3_per_point39=mx = ox*cos(zang) - oy*sin(zang);
wave_3_per_point40=my = ox*sin(zang) + oy*cos(zang);
wave_3_per_point41=ox = mx;
wave_3_per_point42=oy = my;
wave_3_per_point43=mx = ox*cos(yang) + oz*sin(yang);
wave_3_per_point44=mz = - ox*sin(yang) + oz*cos(yang);
wave_3_per_point45=ox = mx;
wave_3_per_point46=oz = mz;
wave_3_per_point47=my = oy*cos(xang) - oz*sin(xang);
wave_3_per_point48=mz = oy*sin(xang) + oz*cos(xang);
wave_3_per_point49=oy = my;
wave_3_per_point50=oz = mz;
wave_3_per_point51=
wave_3_per_point52=oz = oz - 2;
wave_3_per_point53=x = ox*fov/oz + 0.5;
wave_3_per_point54=x = (x-.5)*0.75 + 0.5;
wave_3_per_point55=y = oy*fov/oz + 0.5;
wave_3_per_point56=
shapecode_0_enabled=1
shapecode_0_sides=53
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=10
shapecode_0_x=0.480
shapecode_0_y=0.670
shapecode_0_rad=0.15416
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.62832
shapecode_0_tex_zoom=1.25944
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=trel = time/6;
shape_0_per_frame2=x0 = .4*sin(instance*123+trel)+q2;
shape_0_per_frame3=y0 = q3 *1+ .6*abs(sin(instance*211))+.1;
shape_0_per_frame4=rad = .1*sqr(cos(instance));
shape_0_per_frame5=
shape_0_per_frame6=x = x0*q30 + y0*q31 + .5;
shape_0_per_frame7=y = -x0*q31 + y0*q30 +.5;
shape_0_per_frame8=b = 1; r = 1; g = 1;
shape_0_per_frame9=b2 = .5; r2 =.1*instance; g2 = 0;
shape_0_per_frame10=a = 1; a2 = 0.;
shapecode_1_enabled=0
shapecode_1_sides=32
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.06892
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.83150
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=0.900
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=0.500
shapecode_1_border_g=0.500
shapecode_1_border_b=0.500
shapecode_1_border_a=0.000
shape_1_per_frame1=a = q24/2; a2 = 0;
shape_1_per_frame2=
shape_1_per_frame3=r = rand(10)/10;
shape_1_per_frame4=g = rand(10)/10;
shape_1_per_frame5=b = rand(10)/10;
shape_1_per_frame6=
shape_1_per_frame7=rad = .06*q22;
shapecode_2_enabled=0
shapecode_2_sides=63
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.123
shapecode_2_y=0.000
shapecode_2_rad=0.27319
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.49981
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.500
shapecode_2_border_g=0.500
shapecode_2_border_b=0.500
shapecode_2_border_a=0.000
shape_2_per_frame1=x = .5 + .1* sin (time*73);
shape_2_per_frame2=y = .5 + .1* sin (time*23);
shape_2_per_frame3=
shape_2_per_frame4=r = 0; g = 0; b = 0;
shape_2_per_frame5=r2 = 1; g2 = 1; b2 = 1;
shape_2_per_frame6=
shape_2_per_frame7=rad = mid_att/100;
shape_2_per_frame8=a = .7;
shape_2_per_frame9=a2 = a;
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.510
shapecode_3_rad=0.19869
shapecode_3_ang=0.00000
shapecode_3_tex_ang=1.00531
shapecode_3_tex_zoom=0.49981
shapecode_3_r=1.000
shapecode_3_g=0.400
shapecode_3_b=0.000
shapecode_3_a=0.700
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=0.000
shapecode_3_border_r=0.500
shapecode_3_border_g=0.500
shapecode_3_border_b=0.500
shapecode_3_border_a=0.000
shape_3_per_frame1=x = 0.05 + rand(900)/1000;
shape_3_per_frame2=y = 0.05 + rand(900)/1000;
shape_3_per_frame3= 
per_frame_init_1=pos_x = 0; pos_y = -0;
per_frame_init_2=zang = 0; 
per_frame_init_3=speed = 0;
per_frame_1=dec_med = pow (0.8, 30/fps);
per_frame_2=dec_slow = pow (0.97, 30/fps);
per_frame_3=beat = max (max (bass, mid), treb); 
per_frame_4=avg = avg*dec_slow + beat*(1-dec_slow);
per_frame_5=is_beat = above(beat, .2+avg+peak) * above (time, t0+.2);
per_frame_6=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_7=peak = is_beat * beat + (1-is_beat)*peak*dec_med;
per_frame_8=index = (index + is_beat) %32;
per_frame_9=index2 = (index2 + is_beat*bnot(index))%2;
per_frame_10=index2_ = index2_*dec_med + (1-dec_med)*index2;
per_frame_11=
per_frame_12=q29 = index;
per_frame_13=q27 = is_beat * bnot(index%8);
per_frame_14=k1 =  is_beat*bnot(index%8);
per_frame_15=p1 =  k1*(p1+1) + (1-k1)*p1;
per_frame_16=p2 = dec_slow * p2+ (1-dec_slow)*p1;
per_frame_17=rott = rott*dec_slow + (1-dec_slow)*p2 * 3.1416/4;
per_frame_18=
per_frame_19=//Kamerapos.
per_frame_20=speed = speed*dec_slow + (1-dec_slow)*.03*(index+beat*18)*
per_frame_21=below(sin(time/13),.95);
per_frame_22=
per_frame_23=trel = trel + 1/fps*speed;
per_frame_24=
per_frame_25=xang = -.6*sin(rott) ;//###
per_frame_26=xang = if (below(index,23),xang,.5*cos(index)-.3);
per_frame_27=
per_frame_28=yang = .4*sin(trel)*cos(time*.2);
per_frame_29=yang =  if(above(index,8),yang,.6*sin(index));
per_frame_30=
per_frame_31=zang = zang *dec_slow + (1-dec_slow)*index2_*6.2832; 
per_frame_32=
per_frame_33=zdist = 45; xdist =  4+ 3*sin(time/11);
per_frame_34=pos_x = sin(time/3)*xdist*.8;
per_frame_35=pos_y = pos_y - xang/fps*60*speed;
per_frame_36=cz = zdist*.5;
per_frame_37=
per_frame_38=q30 = cos(zang); q31 = sin(zang);
per_frame_39=q1 = trel*8;q2 = yang;q3 = xang;
per_frame_40=q24 = cos(yang); q25=sin(yang); 
per_frame_41=q32 = (trel-int(trel)); //Blend in
per_frame_42=
per_frame_43=ox = -xdist-pos_x; oy = -pos_y; 
per_frame_44=oz = (trel-int(trel))*zdist-cz-zdist;
per_frame_45=mx = ox*cos(zang) - oy*sin(zang);
per_frame_46=my = ox*sin(zang) + oy*cos(zang);
per_frame_47=ox = mx;oy = my;
per_frame_48=mx = ox*cos(yang) + oz*sin(yang);
per_frame_49=mz = - ox*sin(yang) + oz*cos(yang);
per_frame_50=ox = mx;oz = mz;
per_frame_51=my = oy*cos(xang) - oz*sin(xang);
per_frame_52=mz = oy*sin(xang) + oz*cos(xang);
per_frame_53=oy = my;oz = mz;
per_frame_54=q10=ox; q11 = oy; q12 = oz;
per_frame_55=
per_frame_56=ox = xdist-pos_x; oy = -pos_y; 
per_frame_57=oz = (trel-int(trel))*zdist-cz-zdist;
per_frame_58=mx = ox*cos(zang) - oy*sin(zang);
per_frame_59=my = ox*sin(zang) + oy*cos(zang);
per_frame_60=ox = mx;oy = my;
per_frame_61=mx = ox*cos(yang) + oz*sin(yang);
per_frame_62=mz = - ox*sin(yang) + oz*cos(yang);
per_frame_63=ox = mx;oz = mz;
per_frame_64=my = oy*cos(xang) - oz*sin(xang);
per_frame_65=mz = oy*sin(xang) + oz*cos(xang);
per_frame_66=oy = my;
per_frame_67=oz = mz;
per_frame_68=q13=ox; q14 = oy; q15 = oz;
per_frame_69=
per_frame_70=ox = -xdist-pos_x; oy = -pos_y; 
per_frame_71=oz = (trel-int(trel))*zdist-cz;
per_frame_72=mx = ox*cos(zang) - oy*sin(zang);
per_frame_73=my = ox*sin(zang) + oy*cos(zang);
per_frame_74=ox = mx;oy = my;
per_frame_75=mx = ox*cos(yang) + oz*sin(yang);
per_frame_76=mz = - ox*sin(yang) + oz*cos(yang);
per_frame_77=ox = mx;oz = mz;
per_frame_78=my = oy*cos(xang) - oz*sin(xang);
per_frame_79=mz = oy*sin(xang) + oz*cos(xang);
per_frame_80=oy = my;oz = mz;
per_frame_81=q16=ox; q17 = oy; q18 = oz;
per_frame_82=
per_frame_83=ox = xdist-pos_x; oy = -pos_y; oz = (trel-int(trel))*zdist-cz;
per_frame_84=mx = ox*cos(zang) - oy*sin(zang);
per_frame_85=my = ox*sin(zang) + oy*cos(zang);
per_frame_86=ox = mx;oy = my;
per_frame_87=mx = ox*cos(yang) + oz*sin(yang);
per_frame_88=mz = - ox*sin(yang) + oz*cos(yang);
per_frame_89=ox = mx;oz = mz;
per_frame_90=my = oy*cos(xang) - oz*sin(xang);
per_frame_91=mz = oy*sin(xang) + oz*cos(xang);
per_frame_92=oy = my;oz = mz;
per_frame_93=q19=ox; q20 = oy; q21 = oz;
per_frame_94=
per_frame_95=//Vektor x nach rechts
per_frame_96=ox = 1; oy = 0; oz = 0;
per_frame_97=mx = ox*cos(zang) - oy*sin(zang);
per_frame_98=my = ox*sin(zang) + oy*cos(zang);
per_frame_99=ox = mx;oy = my;
per_frame_100=mx = ox*cos(yang) + oz*sin(yang);
per_frame_101=mz = - ox*sin(yang) + oz*cos(yang);
per_frame_102=ox = mx;oz = mz;
per_frame_103=my = oy*cos(xang) - oz*sin(xang);
per_frame_104=mz = oy*sin(xang) + oz*cos(xang);
per_frame_105=oy = my;oz = mz;
per_frame_106=q4=ox; q5 = oy; q6 = oz;
per_frame_107=
per_frame_108=
per_frame_109=//Vektor z nach hinten
per_frame_110=ox = 0; oy = 0; oz = 1;
per_frame_111=mx = ox*cos(zang) - oy*sin(zang);
per_frame_112=my = ox*sin(zang) + oy*cos(zang);
per_frame_113=ox = mx;oy = my;
per_frame_114=mx = ox*cos(yang) + oz*sin(yang);
per_frame_115=mz = - ox*sin(yang) + oz*cos(yang);
per_frame_116=ox = mx;oz = mz;
per_frame_117=my = oy*cos(xang) - oz*sin(xang);
per_frame_118=mz = oy*sin(xang) + oz*cos(xang);
per_frame_119=oy = my;
per_frame_120=oz = mz;
per_frame_121=q7=ox; q8 = oy; q9 = oz;
per_frame_122=
per_frame_123=q28 = 3+2*sin(time/15);
per_frame_124=q22 = (.5+sin(time/17))*.02;
per_frame_125=
per_frame_126=
per_frame_127=
per_frame_128=
per_frame_129=
warp_1=`shader_body {
warp_2=`//uv1 is rect. screen, center at (0;0)
warp_3=`float2 uv1 = (uv-0.5)*aspect.xy;
warp_4=`float corr = texsize.xy*texsize_noise_hq.zw*2;
warp_5=`
warp_6=`
warp_7=`//uv2 is derived from uv1: Horizon, Tilt, Movement
warp_8=`//1. shape horizion for small planet look
warp_9=`float2 uv2 = uv1;
warp_10=`uv2.y =   uv1.y - .2*(uv1.x*uv1.x + uv1.y*uv1.y);
warp_11=` 
warp_12=`//2. Tilt
warp_13=`float2x2 tilt = float2x2(q30,q31,-q31,q30);
warp_14=`uv2 = mul(tilt,uv2);
warp_15=`
warp_16=`//3. Coord transform
warp_17=`float y0 = q3 ; //Horizon rel. to  screen
warp_18=`float z0 = .5 ; //  fish eye
warp_19=`float z = 8/abs(uv2.y+ y0); //factor for perspective
warp_20=`float2 rs1 = float2 (uv2.x*z,(uv2.y-1*z0)*z);
warp_21=`
warp_22=`//Rotate map into viewing direction
warp_23=`float2x2 dir = float2x2(q24,q25,-q25,q24);
warp_24=`rs1 =  mul(dir,rs1);
warp_25=`
warp_26=`//Now move !
warp_27=`rs1 = rs1 - float2 (0,q1);
warp_28=`
warp_29=`float yr = (uv2.y +y0);
warp_30=`float mask = saturate (16*yr) ;
warp_31=`
warp_32=`float3 sky2 = tex2D(sampler_noise_hq,0.001*rs1*corr);
warp_33=`
warp_34=`float gravel =  lum(tex2D(sampler_noise_mq,0.008*rs1*corr));
warp_35=`float lav_mask = (sky2 * q28*(gravel+.0));;
warp_36=`
warp_37=`float lava = 0.2+abs (lav_mask-0);
warp_38=`lava = saturate (0.5/(lava+.1)-0.5);
warp_39=`float rock = (lav_mask)/64;
warp_40=`
warp_41=`float3 lay1 = saturate(float3 (lava,lava*(lava-0.52)*2,(lava-.94)*8));
warp_42=`lay1 = mask * (lay1 + rock * float3 (.8,1,1));
warp_43=`
warp_44=`float3 copy = + GetBlur2(float2(uv_orig.x, uv_orig.y+.00));
warp_45=`ret = lay1 + 0*lerp(copy,lum(copy),0.8)*.5* mask 
warp_46=`+ q22/(.03+abs(yr))*float3(.7,.3,.9);
warp_47=`
warp_48=`}
comp_1=`sampler sampler_facade01;
comp_2=`
comp_3=`float3 ret1, neu, musl, musr, screen3, pos0, pos1;
comp_4=`float2 pq, pq2;
comp_5=`int mask1, mask2;
comp_6=`float n, dist2;
comp_7=`static const float width =5;
comp_8=`static const float depth =28;
comp_9=`static float3 sxy = float3(q4,q5,q6);
comp_10=`static float3 sxz = float3(q7,q8,q9);
comp_11=`static float3 t = -cross(sxy,sxz);
comp_12=`static float blend = q32;
comp_13=`
comp_14=`
comp_15=`float2 project (float3 s, float3 pos) {
comp_16=`  float Nenner;  float2x3 ts;
comp_17=`  ts = float2x3(t,-s);
comp_18=`  Nenner = mul(cross(t,s),screen3);
comp_19=`  dist2 = Nenner;
comp_20=`  return (mul(ts,cross(pos,screen3))/Nenner);}
comp_21=`
comp_22=`float2 project_gnd (float3 pos) {
comp_23=`  float Nenner;  float2x3 ts;
comp_24=`  ts = float2x3(sxz,-sxy);//auch -t probieren ###
comp_25=`  Nenner = mul(cross(sxz,sxy),screen3);
comp_26=`  return (mul(ts,cross(pos,screen3/48))/Nenner);}
comp_27=`
comp_28=`float3 wall (float2 xy) {
comp_29=`  return(-.2+tex2D (sampler_facade01,xy/4).brg);
comp_30=`}
comp_31=`
comp_32=`shader_body {
comp_33=`screen3 = float3 ((uv-.5)*aspect.xy,1);//wirkt wie zoom
comp_34=`neu = GetBlur1(uv)/4;
comp_35=`
comp_36=`  pq  = project (sxy, float3 (q10,q11,q12)); 
comp_37=`  pq2 = project (sxz, float3 (q10,q11,q12)); 
comp_38=`  mask1 = (pq.x>=0)* (pq.x <=width);
comp_39=`  mask2 = (pq2.x>=0)*(pq2.x <= depth);
comp_40=`  if (mask1) {neu = lerp(neu,wall(pq),blend);}
comp_41=`  if (mask2) {neu = lerp(neu,wall(pq2),blend);}
comp_42=`
comp_43=`  pq  = project (-sxy, float3 (q13,q14,q15)); 
comp_44=`  pq2 = project (sxz, float3 (q13,q14,q15)); 
comp_45=`  mask1 = (pq.x>=0)* (pq.x <=width);
comp_46=`  mask2 = (pq2.x>=0)*(pq2.x <= depth);
comp_47=`  if (mask1) {neu = lerp(neu,wall(pq),blend);}
comp_48=`  if (mask2) {neu = lerp(neu,wall(pq2),blend);}
comp_49=`
comp_50=`  pq  = project (sxy, float3 (q16,q17,q18)); 
comp_51=`  pq2 = project (sxz, float3 (q16,q17,q18)); 
comp_52=`  mask1 = (pq.x>=0)* (pq.x <=width) * (dist2 >=0);
comp_53=`  mask2 = (pq2.x>=0)*(pq2.x <= depth)* (dist2 >=0);
comp_54=`  if (mask1) {neu = wall(pq);}
comp_55=`  if (mask2) {neu = wall(pq2);}
comp_56=`  musr = (q29%2)/length(abs(frac(pq2/2)-.5))*mask2;
comp_57=`  musr += (q29%2)/length(abs(frac(pq/2)-.5))*mask1;
comp_58=`
comp_59=`  pq  = project (-sxy, float3 (q19,q20,q21)); 
comp_60=`  pq2 = project (sxz, float3 (q19,q20,q21)); 
comp_61=`  mask1 = (pq.x>=0)* (pq.x <=width) * (dist2 <=0);
comp_62=`  mask2 = (pq2.x>=0)*(pq2.x <= depth)* (dist2 <=0);
comp_63=`  if (mask1) {neu = wall(pq);}
comp_64=`  if (mask2) {neu = wall(pq2);}
comp_65=`  musl = ((q29+1)%2)/length(abs(frac(pq2/2)-.5))*mask2;
comp_66=`  musl += ((q29+1)%2)/length(abs(frac(pq/2)-.5))*mask1;
comp_67=`
comp_68=`ret = tex2D (sampler_main,uv+neu/8)
comp_69=`+neu*(1+roam_cos)*saturate(bass_att*.04/length(uv-.5))/2
comp_70=`*(bass_att) + saturate((musl*roam_sin+musr*roam_cos)/16)*mid_att;
comp_71=`
comp_72=`}
